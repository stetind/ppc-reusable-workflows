name: üßπ Delete All Workflow Runs

on:
  workflow_call:
    inputs:
      status:
        description: |
          Optional status filter for workflow runs. Available options:
          ‚Ä¢ completed - All completed runs
          ‚Ä¢ action_required - Runs that require action
          ‚Ä¢ cancelled - Manually cancelled runs
          ‚Ä¢ failure - Failed runs
          ‚Ä¢ neutral - Runs with neutral outcome
          ‚Ä¢ skipped - Skipped runs
          ‚Ä¢ stale - Stale runs
          ‚Ä¢ success - Successful runs
          ‚Ä¢ timed_out - Runs that exceeded time limit
          ‚Ä¢ queued - Queued runs
          ‚Ä¢ requested - Requested runs
          ‚Ä¢ waiting - Waiting runs
          ‚Ä¢ pending - Pending runs
        type: string
        required: false
        default: 'cancelled'
      workflow_name:
        description: 'The name of the workflow to delete runs for (e.g., "CI Workflow")'
        required: false
        type: string
      runner:
        description: 'Choose the runner'
        required: false
        default: 'self-hosted'
        type: string
      job_container:
        description: 'Select the docker container for the action'
        required: false
        default: 'node:22.14'
        type: string

  workflow_dispatch:
    inputs:
      status:
        description: |
          Optional status filter for workflow runs. Available options:
          ‚Ä¢ completed - All completed runs
          ‚Ä¢ action_required - Runs that require action
          ‚Ä¢ cancelled - Manually cancelled runs
          ‚Ä¢ failure - Failed runs
          ‚Ä¢ neutral - Runs with neutral outcome
          ‚Ä¢ skipped - Skipped runs
          ‚Ä¢ stale - Stale runs
          ‚Ä¢ success - Successful runs
          ‚Ä¢ timed_out - Runs that exceeded time limit
          ‚Ä¢ queued - Queued runs
          ‚Ä¢ requested - Requested runs
          ‚Ä¢ waiting - Waiting runs
          ‚Ä¢ pending - Pending runs
        type: choice
        required: false
        default: 'cancelled'
        options:
          - completed
          - action_required
          - cancelled
          - failure
          - neutral
          - skipped
          - stale
          - success
          - timed_out
          - queued
          - requested
          - waiting
          - pending
      workflow_name:
        description: 'The name of the workflow to delete runs for (e.g., "CI Workflow")'
        required: false
        type: string
      runner:
        description: 'Choose the runner'
        required: false
        default: 'self-hosted'
        type: choice
        options:
          - 'self-hosted'
          - 'ubuntu-latest'
      job_container:
        description: 'Select the docker container for the action'
        required: false
        default: 'node:22.14'
        type: choice
        options:
          - 'node:22.14'
          - 'ubuntu:latest'

jobs:
  cleanup:
    runs-on: ${{ inputs.runner }}
    container: ${{ inputs.job_container }}

    steps:
      - name: üì¶ Install dependencies
        run: |
          echo "üì• Updating package lists..."
          apt-get update && \
          echo "‚öôÔ∏è Installing required packages..." && \
          apt-get install -y \
            jq \
            bash \
            curl \
            gh && \
          echo "‚úÖ Dependencies installed successfully!"

      - name: üîê Authenticate with GitHub CLI
        shell: bash
        run: echo "${{ secrets.WORKFLOW_TOKEN }}" | gh auth login --with-token

      - name: üßº Delete all workflow runs
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.WORKFLOW_TOKEN }}
        run: |
          echo "üöÄ Fetching and deleting all workflow runs..."

          current_run_id="${{ github.run_id }}"
          workflow_name="${{ inputs.workflow_name }}"
          
          # First, let's list all workflows to see the exact name
          echo "üìã Available workflows:"
          gh api "/repos/${{ github.repository }}/actions/workflows" | jq -r '.workflows[].name'
          
          echo "üö´ Current run ID: $current_run_id (will be skipped)"
          echo "üîç Targeting workflow: $workflow_name"

          per_page=100
          page=1
          deleted_count=0

          while true; do
            echo "üîÑ Fetching page $page..."

            url="/repos/${{ github.repository }}/actions/runs?per_page=$per_page&page=$page"
            if [ -n "${{ inputs.status }}" ]; then
              url="${url}&status=${{ inputs.status }}"
              echo "üìé Filtering runs by status: ${{ inputs.status }}"
            fi
            
            if [ -n "$workflow_name" ]; then
              workflow_id=$(gh api "/repos/${{ github.repository }}/actions/workflows" | \
                          jq -r --arg name "$workflow_name" '.workflows[] | select(.name==$name) | .id')
              if [ -n "$workflow_id" ]; then
                url="${url}&workflow_id=$workflow_id"
                echo "üéØ Found workflow ID: $workflow_id"
              else
                echo "‚ùå Error: Could not find workflow with name: $workflow_name"
                exit 1
              fi
            fi

            response=$(gh api -X GET "$url")
            total_count=$(echo "$response" | jq -r '.total_count')
            
            if [ "$total_count" -eq 0 ]; then
              echo "‚úÖ No more runs to delete."
              break
            fi

            echo "$response" | jq -r '.workflow_runs[]? | select(.id != null) | .id' | while read -r run_id; do
              if [ "$run_id" = "$current_run_id" ]; then
                echo "‚è≠Ô∏è Skipping current run $run_id"
                continue
              fi
              echo "üóëÔ∏è Deleting run $run_id"
              gh api --method DELETE "/repos/${{ github.repository }}/actions/runs/$run_id" || {
                echo "‚ùå Failed to delete run $run_id"
                continue
              }
              ((deleted_count+=1))
              sleep 0.5
            done

            ((page+=1))
          done

          echo "üî• Deleted $deleted_count workflow runs."