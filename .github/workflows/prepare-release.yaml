# =============================================================================
# üöß Prepare Reusable Release
#
# Description:
#   Automates the release preparation process by handling versioning and file updates.
#
# Key Functions:
#   ‚Ä¢ Computes next semantic version from commit history
#   ‚Ä¢ Updates __VERSION__ placeholders in workflow files
#   ‚Ä¢ Creates version metadata in .release-meta.json
#   ‚Ä¢ Pushes changes to releases branch
#
# Inputs:
#   ‚Ä¢ tag: Optional specific version tag (e.g., v1.0.0)
#   ‚Ä¢ prerelease: Optional prerelease identifier (beta/rc)
#   ‚Ä¢ runner: Custom runner selection
#   ‚Ä¢ job_container: Docker container for the action
#
# Requirements:
#   ‚Ä¢ WORKFLOW_TOKEN with repository write access
#   ‚Ä¢ Git history access (fetch-depth: 0)
#
# Trigger: Manual (workflow_dispatch)
# =============================================================================

name: üöß Prepare Reusable Release
run-name: üöß Prepare Reusable Release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Optional tag version (e.g., v1.0.0). Leave empty for the latest tag.'
        required: false
        type: string
      prerelease:
        description: 'Optional prerelease identifier (e.g., beta, rc). Leave empty for stable.'
        required: false
        type: string
      runner:
        description: 'Choose the runner'
        required: false
        default: 'self-hosted'
        type: string
      job_container:
        description: 'Select the docker container for the action'
        required: false
        default: 'node:22.14'
        type: string

env:
  TEMP_BRANCH: releases

jobs:
  prepare:
    name: Prepare & Push
    runs-on: ${{ inputs.runner || vars.DEFAULT_RUNNER }}
    container: ${{ inputs.job_container || vars.DEFAULT_NODE_CONTAINER}}

    steps:
      - name: ‚¨áÔ∏è Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}
          fetch-depth: 0

      - name: üè∑Ô∏è Select tag
        id: select_tag
        uses: stetind/ppc-github-composite-actions/.github/actions/get-latest-tag@main
        with:
          tag: ${{ github.event.inputs.tag }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: üß™ Generate changelog
        id: changelog
        uses: stetind/ppc-github-composite-actions/.github/actions/generate-changelog-by-tag@main
        with:
          previous_tag: ${{ steps.select_tag.outputs.selected_tag }}
          repository: ${{ github.repository }}
          new_tag: ''

      - name: Replace __VERSION__ placeholders
        if: steps.changelog.outputs.has_changes != ''
        run: |
          echo "Replacing version with ${{ steps.changelog.outputs.new_tag }}"
          find .github/workflows -type f -name "*.yaml" \
            -exec sed -i "s|__VERSION__|${{ steps.changelog.outputs.new_tag }}|g" {} +

      - name: üíæ Write release metadata
        if: steps.changelog.outputs.has_changes != ''
        run: |
          cat <<EOF > .release-meta.json
          {
            "previous_tag": "${{ steps.select_tag.outputs.selected_tag }}",
            "new_tag": "${{ steps.changelog.outputs.new_tag }}",
            "prerelease": "${{ github.event.inputs.prerelease || '' }}"
          }
          EOF

      - name: Commit & Push to ${{ env.TEMP_BRANCH }}
        if: steps.changelog.outputs.has_changes != ''
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git checkout -B ${{ env.TEMP_BRANCH }}
          git add .github/workflows/*.yaml
          git add .github/*.yaml
          git add .release-meta.json
          git add README.md
          git commit -m "Prepare release for version ${{ steps.changelog.outputs.new_tag }}"
          git push origin ${{ env.TEMP_BRANCH }} --force