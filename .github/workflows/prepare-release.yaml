name: üöß Prepare Reusable Release
run-name: üöß Prepare Reusable Release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Optional tag version (e.g., v1.0.0). Leave empty for the latest tag.'
        required: false
        type: string
      prerelease:
        description: 'Optional prerelease identifier (e.g., beta, rc). Leave empty for stable.'
        required: false
        type: string

env:
  TEMP_BRANCH: releases

jobs:
  prepare:
    name: Prepare & Push
    runs-on: ubuntu-latest

    steps:
      - name: ‚¨áÔ∏è Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}
          fetch-depth: 0

      - name: üè∑Ô∏è Get latest tag (if exists)
        id: get_tag
        uses: stetind/ppc-github-composite-actions/.github/actions/get-latest-tag@main

      - name: üè∑Ô∏è Use provided tag or latest tag
        id: select_tag
        run: |
          LATEST="${{ steps.get_tag.outputs.latest_tag }}"
          TAG_INPUT="${{ github.event.inputs.tag }}"
          
          if [[ -n "$TAG_INPUT" ]]; then
            echo "selected_tag=$TAG_INPUT" >> $GITHUB_OUTPUT
            echo "::notice ::Using provided tag: $TAG_INPUT"
          else
            echo "selected_tag=$LATEST" >> $GITHUB_OUTPUT
            echo "::notice ::Using latest tag: $LATEST"
          fi

      - name: üì¶ Get commits since selected tag
        id: get_commits
        uses: stetind/ppc-github-composite-actions/.github/actions/get-commits-since-tag@main
        with:
          tag: ${{ steps.select_tag.outputs.selected_tag }}

      - name: üö® Check if commits found or force proceed
        id: check_commits
        uses: stetind/ppc-github-composite-actions/.github/actions/check-should-proceed@main
        with:
          commits: ${{ steps.get_commits.outputs.commits }}
          force: ${{ inputs.force }}

      - name: üîç Detect version bump and compute new version
        id: version
        uses: stetind/ppc-github-composite-actions/.github/actions/detect-version-bump@main
        with:
          commits: ${{ steps.get_commits.outputs.commits }}
          tag: ${{ steps.select_tag.outputs.selected_tag }}

      - name: Replace __VERSION__ placeholders
        run: |
          echo "Replacing version with ${{ steps.version.outputs.new_version }}"
          find .github/workflows -type f -name "*.yaml" \
            -exec sed -i "s|__VERSION__|${{ steps.version.outputs.new_version }}|g" {} +

      - name: üíæ Write release metadata
        run: |
          cat <<EOF > .release-meta.json
          {
            "previous_tag": "${{ steps.select_tag.outputs.selected_tag }}",
            "new_tag": "${{ steps.version.outputs.new_version }}",
            "prerelease": "${{ github.event.inputs.prerelease || '' }}"
          }
          EOF

      - name: Commit & Push to ${{ env.TEMP_BRANCH }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git checkout -B ${{ env.TEMP_BRANCH }}
          git add .github/workflows/*.yaml
          git add .github/*.yaml
          git add .release-meta.json
          git add README.md
          git commit -m "Prepare release for version ${{ steps.version.outputs.new_version }}"
          git push origin ${{ env.TEMP_BRANCH }} --force
