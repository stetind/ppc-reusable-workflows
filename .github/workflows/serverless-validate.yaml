name: AWS_Serverless_Validate

on:
  workflow_call:
    secrets:
      NPM_TOKEN:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      SERVERLESS_ACCESS_KEY:
        required: true
      AWS_COGNITO_APP_SECRET:
        required: true
    inputs:
      deploy_environment:
        description: 'Choose an environment to validate in'
        required: true
        type: string
      region:
        description: 'Choose the AWS region'
        required: false
        default: 'us-east-1'
        type: string
      runner:
        description: 'Select runner'
        required: false
        default: 'ubuntu-latest'
        type: string
      job_container:
        description: 'Select the docker container for the action'
        required: false
        default: 'node:20.13'
        type: string
      debug:
        description: 'Enable debug?'
        required: false
        default: false
        type: boolean

env:
  AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
  AWS_SDK_LOAD_CONFIG: 1
  AWS_REGION: ${{ inputs.region }}
  debugMode: ${{ inputs.debug }}

jobs:
  validate_serverless:
    runs-on: ${{ inputs.runner }}
    container:
      image: ${{ inputs.job_container }}
    environment: ${{ inputs.deploy_environment }}
    env:
      AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
      AWS_SDK_LOAD_CONFIG: 1
      AWS_REGION: ${{ inputs.region }}
      debugMode: ${{ inputs.debug }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: üîß Setup Node and NPM
        uses: stetind/ppc-npm-global-dependencies-action@v4.0
        with:
          npm_token: ${{ secrets.NPM_TOKEN }}

      - name: üîß Secret to Environment
        uses: oNaiPs/secrets-to-env-action@v1.5
        with:
          secrets: ${{ toJSON(secrets) }}

      - name: üìì Fill [dot] Env (Generic)
        uses: CallePuzzle/envvar-to-dotenv-action@v1.2.1
        with:
          variableNamesByFilter: ^[A-Za-z].*

      - name: Install jq
        run: |
          apt-get update && apt-get install -y jq

      - name: üîß Vars to Environment
        shell: bash
        run: |
          declare -A obj
          echo '${{ toJSON(vars) }}' > .vars_json

          while read -r key value; do
            obj[$key]=$value
          done <<< $(jq -r 'to_entries[] | "\(.key) \(.value)"' .vars_json)

          echo '' >> .env

          for key in "${!obj[@]}"; do
            value=${obj[$key]}
            echo "$key=${obj[$key]}" >> .env
          done

      - name: üèóÔ∏è Prepare Serverless
        run: |
          AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY_ID }} \
          AWS_SECRET=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
          npm run sls-configure

      - name: Validate Serverless configuration
        run: |
          npx serverless package
          if [ $? -ne 0 ]; then
            echo "Serverless validation failed!"
            exit 1
          else
            echo "Serverless validation succeeded!"
          fi
        env:
          SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
