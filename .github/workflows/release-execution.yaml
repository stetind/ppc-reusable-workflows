# =============================================================================
# üöÄ Release Execution Workflow
#
# Description:
#   A reusable workflow that processes prepared release data and executes
#   the release process including changelog generation and branch cleanup.
#
# Key Features:
#   ‚Ä¢ Metadata processing from .release-meta.json
#   ‚Ä¢ Release creation via conventional commits
#   ‚Ä¢ Branch merging and cleanup
#   ‚Ä¢ Release documentation generation
#
# Required Files:
#   ‚Ä¢ .release-meta.json with release configuration
#
# Dependencies:
#   ‚Ä¢ release-conventional.yaml
#
# Inputs:
#   ‚Ä¢ runner: CI runner selection
#   ‚Ä¢ job_container: Container configuration
#
# Outputs:
#   ‚Ä¢ GitHub Release
#   ‚Ä¢ Updated branch state
#   ‚Ä¢ Release documentation
#
# Usage:
#   Called by release-run.yaml
# =============================================================================


name: üöÄ Release Execution Workflow

on:
  workflow_call:
    inputs:
      target:
        description: 'The target branch name for merge'
        required: false
        default: ${{ github.event.repository.default_branch }}
        type: string
      temporary:
        description: 'The temporary branch name for merge'
        required: false
        default: 'release'
        type: string
      runner:
        description: 'GitHub runner to execute the workflow (e.g., ubuntu-latest, self-hosted)'
        required: false
        default: ${{ vars.DEFAULT_RUNNER }}
        type: string
      job_container:
        description: 'Docker container image to run the job (e.g., node:22.14)'
        required: false
        default: ${{ vars.DEFAULT_NODE_CONTAINER }}
        type: string
    outputs:
      previous_tag: ${{ jobs.metadata.outputs.previous_tag }}
      new_tag: ${{ jobs.metadata.outputs.new_tag }}
      prerelease: ${{ jobs.metadata.outputs.prerelease }}
      merge_option: ${{ jobs.metadata.outputs.merge_option }}
      source_branch: ${{ jobs.metadata.outputs.source_branch }}

jobs:
  metadata:
    name: Read Metadata & Trigger Reusable Release Workflow
    uses: stetind/ppc-reusable-workflows/.github/workflows/release-checkout.yaml@__VERSION__
    with:
      runner: ${{ inputs.runner }}
      job_container: ${{ inputs.job_container }}

  release:
    name: üìü Final Release
    needs: metadata
    uses: stetind/ppc-reusable-workflows/.github/workflows/release-conventional.yaml@__VERSION__
    secrets: inherit
    with:
      tag: ${{ needs.metadata.outputs.previous_tag }}
      prerelease: ${{ needs.metadata.outputs.prerelease }}
      runner: ${{ inputs.runner }}
      job_container: ${{ inputs.job_container }}

  clean:
    name: üßπ Merge and clean branches
    needs: [ release, metadata ]
    if: needs.metadata.outputs.source_branch !=  github.event.repository.default_branch
    runs-on: ${{ inputs.runner }}
    container: ${{ inputs.job_container }}
    steps:
      - name: ‚¨áÔ∏è Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ needs.metadata.outputs.source_branch }}

      - name: üîÑ Merge and Delete
        id: create_pr
        uses: stetind/ppc-github-composite-actions/.github/actions/create-pr-and-merge@v1.1.1
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}
          title: Release ${{ needs.metadata.outputs.new_tag }}
          merge_option: ${{ needs.metadata.outputs.merge_option }}
          source: ${{ needs.metadata.outputs.source_branch }}
          target: ${{ github.event.repository.default_branch }}

  clean_release:
    name: üßπ Clean Temporary branch
    needs: [ release, metadata ]
    runs-on: ${{ inputs.runner }}
    container: ${{ inputs.job_container }}
    steps:
      - name: üóëÔ∏è Delete `${{ inputs.temporary }}` Branch
        uses: stetind/ppc-github-composite-actions/.github/actions/delete-bracnh@v1.1.1
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}
          branch: ${{ inputs.temporary }}
