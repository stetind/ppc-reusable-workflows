name: AWS_Serverless_Deploy

on:
  workflow_call:
    secrets:
      NPM_TOKEN:
        required: true
      SERVERLESS_ACCESS_KEY:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
    inputs:
      deploy_environment:
        description: 'Choose an environment'
        required: true
        default: "staging"
        type: string
      region:
        description: 'Choose the region you want to deploy'
        required: false
        default: 'us-east-1'
        type: string
      debug:
        description: 'Enable debug?'
        required: false
        default: false
        type: boolean
      dot_env_params:
        description: 'A comma separated string with the names of the secrets or environment variables which we want to pass to .env'
        required: false
        default: ''
        type: string
      node_version:
        description: 'The desired node version'
        required: false
        default: '20'
        type: string
      runner:
        description: 'Choose the runner'
        required: false
        default: 'self-hosted'
        type: string

env:
  AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1,
  AWS_SDK_LOAD_CONFIG: 1
  NODE_VERSION: ${{ inputs.node_version }}
  AWS_REGION: ${{ inputs.region }}
  debugMode: ${{ inputs.debug }}
  DOT_ENV_PARAMS: ${{ inputs.dot_env_params }}
  NODE_ENV: production

jobs:
  deploy:
    runs-on: ${{ inputs.runner }}
    name: Deploy
    environment: ${{ inputs.deploy_environment }}
    steps:
      - name: 🛫 Checkout
        uses: actions/checkout@v4

      - name: 🧙 Install Node
        uses: stetind/ppc-npm-global-dependencies-action@v3.1
        with:
          npm_token: ${{ secrets.NPM_TOKEN }}
          node_version: ${{ inputs.node_version }}
          bypass_install: true

      - name: 🔧 Secret to Environment
        uses: oNaiPs/secrets-to-env-action@v1
        with:
          secrets: ${{ toJSON(secrets) }}

      - name: 📓 Fill [dot] Env (Generic)
        uses: CallePuzzle/envvar-to-dotenv-action@v1.1.9
        with:
          variableNamesByFilter: ^[A-Za-z].*

      - name: 🔧 Vars to Environment
        run: |
          declare -A obj
          echo '${{ toJSON(vars) }}' > ${{github.workspace}}/.vars_json
          
          while read -r key value; do
            obj[$key]=$value
          done <<< $(jq -r 'to_entries[] | "\(.key) \(.value)"' ${{github.workspace}}/.vars_json)

          echo '' >> ${{github.workspace}}/.env

          for key in "${!obj[@]}"; do
            value=${obj[$key]}
            echo "$key=${obj[$key]}" >> ${{github.workspace}}/.env
          done


      - name: 🔧 Install Global Dependencies
        #serverless-layer@2.7.0 is the latest stable version 2.8 has issues
        run: npm install -g webpack@5.91.0 &&
          npm install -g webpack-cli@5.1.4 &&
          npm install -g webpack-node-externals@3.0.0 &&
          npm install -g serverless@3.28.1 &&
          npm install @serverless/utils@6.15.0 --save-dev &&
          npm install serverless-dotenv-plugin@6.0.0 --save-dev &&
          npm install serverless-plugin-typescript@2.1.5 --save-dev &&
          serverless plugin install -n serverless-prune-plugin@2.0.2 &&
          serverless plugin install -n serverless-apigateway-service-proxy@2.2.1 &&
          serverless plugin install -n serverless-api-gateway-throttling@2.0.3&&
          serverless plugin install -n serverless-webpack@5.13.0 &&
          serverless plugin install -n serverless-layers@2.7.0
          
      - name: 🔧 Npm Install
        run: npm ci --ignore-scripts  --force --quite
      - name: 🏗️ Prepare Deploy
        run: |
          npm run compile-serverless &&
          sls config credentials --overwrite --provider aws --key "${{ secrets.AWS_ACCESS_KEY_ID }}" --secret "${{ secrets.AWS_SECRET_ACCESS_KEY }}"

      - name: 🚅 Deploy to AWS
        run: |
          sls deploy -s ${{ vars.PPC_STAGE }} -r ${{ inputs.region }} --verbose
        env:
          SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
