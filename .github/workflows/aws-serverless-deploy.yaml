name: AWS_Serverless_Deploy

on:
  workflow_call:
    secrets:
      NPM_TOKEN:
        required: true
      SERVERLESS_ACCESS_KEY:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
    inputs:
      deploy_environment:
        description: 'Choose an environment'
        required: true
        default: "staging"
        type: string
      region:
        description: 'Choose the region you want to deploy'
        required: false
        default: 'us-east-1'
        type: string
      debug:
        description: 'Enable debug?'
        required: false
        default: false
        type: boolean
      runner:
        description: 'Choose the runner'
        required: false
        default: 'self-hosted'
        type: string
      job_container:
        description: 'Select the docker container for the action'
        required: false
        default: 'node:20.13'
        type: string

env:
  AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1,
  AWS_SDK_LOAD_CONFIG: 1
  AWS_REGION: ${{ inputs.region }}
  debugMode: ${{ inputs.debug }}

jobs:
  deploy:
    runs-on: ${{ inputs.runner }}
    name: Deploy
    environment: ${{ inputs.deploy_environment }}
    container: ${{ inputs.job_container }}
    volumes:
        - ${{ github.workspace }}:/workspace
    steps:
      - name: üõ´ Checkout
        uses: actions/checkout@v4

      - name: üßô Install Node
        uses: stetind/ppc-npm-global-dependencies-action@v4.0
        with:
          npm_token: ${{ secrets.NPM_TOKEN }}

      - name: üîß Secret to Environment
        uses: oNaiPs/secrets-to-env-action@v1
        with:
          secrets: ${{ toJSON(secrets) }}

      - name: üìì Fill [dot] Env (Generic)
        uses: CallePuzzle/envvar-to-dotenv-action@v1.1.9
        with:
          variableNamesByFilter: ^[A-Za-z].*

      - name: üîß Vars to Environment
        shell: bash
        run: |
          declare -A obj
          echo '${{ toJSON(vars) }}' > workspace/.vars_json
          
          while read -r key value; do
            obj[$key]=$value
          done <<< $(jq -r 'to_entries[] | "\(.key) \(.value)"' workspace/.vars_json)

          echo '' >> workspace/.env

          for key in "${!obj[@]}"; do
            value=${obj[$key]}
            echo "$key=${obj[$key]}" >> workspace/.env
          done

      - name: üèóÔ∏è Prepare Deploy
        run: AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY_ID }} AWS_SECRET=${{ secrets.AWS_SECRET_ACCESS_KEY }} npm run sls-configure

      - name: üöÖ Deploy to AWS
        run: |
          PPC_STAGE=${{ vars.PPC_STAGE }} REGION=${{ inputs.region }} npm run sls-deploy
        env:
          SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
