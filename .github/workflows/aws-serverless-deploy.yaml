name: AWS_Serverless_Deploy

on:
  workflow_call:
    secrets:
      NPM_TOKEN:
        required: true
      SERVERLESS_ACCESS_KEY:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
    inputs:
      deploy_environment:
        description: 'Choose an environment'
        required: true
        default: "staging"
        type: string
      region:
        description: 'Choose the region you want to deploy'
        required: false
        default: 'us-east-1'
        type: string
      debug:
        description: 'Enable debug?'
        required: false
        default: false
        type: boolean
      dot_env_params:
        description: 'A comma separated string with the names of the secrets or environment variables which we want to pass to .env'
        required: false
        default: ''
        type: string
env:
  NODE_VERSION: 20
  AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1,
  AWS_SDK_LOAD_CONFIG: 1
  AWS_REGION: ${{ inputs.region }}
  debugMode: ${{ inputs.debug }}
  DOT_ENV_PARAMS: ${{ inputs.dot_env_params }}
  NODE_ENV: production

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy
    environment: ${{ inputs.deploy_environment }}
    steps:
      - name: ðŸ›« Checkout
        uses: actions/checkout@v4

      - name: ðŸ”§ Secret to Environment
        uses: oNaiPs/secrets-to-env-action@v1
        with:
          secrets: ${{ toJSON(secrets) }}

      - name: ðŸ““ Fill [dot] Env (Generic)
        uses: CallePuzzle/envvar-to-dotenv-action@v1.1.9
        with:
          variableNamesByFilter: ^[A-Za-z].*

      - name: ðŸ”§ Vars to Environment
        run: |
          declare -A obj
          echo '${{ toJSON(vars) }}' > ${{github.workspace}}/.vars_json
          
          while read -r key value; do
            obj[$key]=$value
          done <<< $(jq -r 'to_entries[] | "\(.key) \(.value)"' ${{github.workspace}}/.vars_json)

          echo '' >> ${{github.workspace}}/.env

          for key in "${!obj[@]}"; do
            value=${obj[$key]}
            echo "$key=${obj[$key]}" >> ${{github.workspace}}/.env
          done

      - name: ðŸ§™ Setup Node and NPM
        uses: stetind/web-setup-node-npm-action@v3-dev-1
        with:
          bypass_install: true

      # - name: ðŸ”§ Setup Npm Token
      #   # we need ~/.npmrc in order to avoid errors on sls deploy
      #   run: |
      #     npm config set //registry.npmjs.org/:_authToken ${{ secrets.NPM_TOKEN }} &&
      #     echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ./.npmrc &&
      #     cp ./.npmrc ~/.npmrc

      - name: ðŸ”§ Install Global Deployment Dependencies
        uses: stetind/ppc-npm-global-dependencies-serverless-action@v2.1
        with:
          key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          token: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          npm_token: ${{ secrets.NPM_TOKEN }}

      # - name: Install Dependencies
      #   run:  |
      #     npm install && npm cache clean --force --quite

      # - name: Prepare Deploy
      #   run: |
      #     npm run compile-serverless &&
      #     sls config credentials --provider aws --key "${{ secrets.AWS_ACCESS_KEY_ID }}" --secret "${{ secrets.AWS_SECRET_ACCESS_KEY }}"

      - name: Deploy Serverless
        run: |
          sls deploy -s ${{ vars.PPC_STAGE }} -r ${{ inputs.region }} --verbose
        env:
          SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
