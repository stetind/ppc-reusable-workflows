# =============================================================================
# 📦 NPM Publish
#
# This workflow publishes Node.js packages to npm registry:
# - Supports both production and development releases
# - Handles version updates automatically
# - Configurable for different environments and runners
#
# Inputs:
#   - release_version_name: Version for npm package
#   - is_dev_release: Whether this is a development release
#   - dev_release_tag_name: Tag for dev releases (default: dev)
#   - runner: GitHub runner to use (default: ubuntu-latest)
#
# Required Secrets:
#   - NPM_TOKEN: npm registry authentication token
#
# Trigger: workflow_call
# =============================================================================


name: Npm - Publish

on:
  workflow_call:
    inputs:
      release_version_name:
        description: The name of the version that will be used to publish release on NPM.
        type: string
        required: true
      is_dev_release:
        description: Mark the publish as dev or not.
        type: boolean
        default: false
        required: false
      dev_release_tag_name:
        description: The name of the tag that will be used to publish a dev release on NPM.
        type: string
        default: dev
        required: false
      runner:
        description: 'Choose the runner'
        required: false
        default: 'ubuntu-latest'
        type: string

jobs:
  decuple_release_name:
    runs-on: ${{ inputs.runner }}
    container: 'ubuntu:latest'
    outputs:
      tag: ${{ steps.extract.outputs.tag }}
    steps:
      - name: Extract dev tag from release tag
        id: extract
        run: |
          RELEASE_TAG="${{ inputs.release_version_name }}"
          if [[ $RELEASE_TAG == *-* ]]; then
            TAG=$(echo $RELEASE_TAG | cut -d'-' -f2- | cut -d'.' -f1 )
          else
            TAG="dev"
          fi
          echo "tag=$TAG" >> $GITHUB_OUTPUT

  publish:
    runs-on: ${{ inputs.runner }}
    needs:
      - decuple_release_name
    container: 'node:22.14'
    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      NODE_ENV: ${{ inputs.is_dev_release && 'development' || 'production' }}

    steps:
      - name: 🛫 Checkout
        uses: actions/checkout@v4

      - name: 🔧 Setup Node and NPM
        uses: stetind/ppc-github-composite-actions/.github/actions/install-global-dependencies@v1.0.5
        with:
          npm_token: $NPM_TOKEN

      - name: 🏗️ Building Environment
        run: npm run build --if-present && npx --yes browserslist@latest --update-db

      - name: 🚀 Update version
        run: npm --no-git-tag-version version ${{ inputs.release_version_name }}
        env:
          NODE_AUTH_TOKEN: $NPM_TOKEN

      - name: 🐱‍🚀 Publish Dev
        if: "inputs.is_dev_release"
        run: npm publish --tag ${{ needs.decuple_release_name.outputs.tag || 'dev' }}
        env:
          NODE_AUTH_TOKEN: $NPM_TOKEN

      - name: 🐱‍🚀 Publish Release
        if: "!inputs.is_dev_release"
        run: npm publish
        env:
          NODE_AUTH_TOKEN: $NPM_TOKEN
