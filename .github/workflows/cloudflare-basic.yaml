# =============================================================================
# ☁️ Cloudflare Wrangler Deploy
# Deploys a Cloudflare Worker using Wrangler.
# Inputs:
#   - wrangler_environment: Target environment (e.g. production, staging)
#   - secrets: Optional JSON object with key-value secrets to be injected
# =============================================================================

name: Cloudflare_Deploy

on:
  workflow_call:
    secrets:
      NPM_TOKEN:
        required: true
      CF_API_TOKEN:
        required: true
    inputs:
      deploy_environment:
        description: 'Choose an environment to deploy to'
        required: true
        type: string
      debug:
        description: 'Enable debug?'
        required: false
        default: false
        type: boolean
      runner:
        description: 'Choose the runner'
        required: false
        default: 'ubuntu-latest'
        type: string
      job_container:
        description: 'Select the docker container for the action'
        required: false
        default: 'node:22.14'
        type: string
env:
  WRANGLER_SECRETS: ''

jobs:
  deploy:
    runs-on: ${{ inputs.runner }}
    name: Deploy
    environment: ${{ inputs.deploy_environment }}
    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    container:
      image: ${{ inputs.job_container }}
      volumes:
        - ${{ github.workspace }}:/workspace
    steps:
      - name: 🛫 Checkout
        uses: actions/checkout@v4

      - name: 🧙 Install Node
        uses: stetind/ppc-github-composite-actions/.github/actions/intall-global-dependencies@v1.0.1
        with:
          npm_token: $NPM_TOKEN

      - name: 🔧 Building Environment
        run: npm run build --if-present

      - name: 📓 Create wrangler configuration
        id: wrangler
        uses: stetind/ppc-github-composite-actions/.github/actions/wrangler-replace-varaibles@v1.0.1
        with:
          secrets: ${{ toJSON(secrets) }}
          variables: ${{ toJSON(vars) }}

      - name: 📦 Publish app
        uses: cloudflare/wrangler-action@v3.14.1
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          environment: ${{ vars.env_environment }}
          secrets: ${{ steps.wrangler.outputs.wrangler_secrets }}
