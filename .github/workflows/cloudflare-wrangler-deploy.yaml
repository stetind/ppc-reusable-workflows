# =============================================================================
# ☁️ Cloudflare Wrangler Deploy
# Deploys a Cloudflare Worker using Wrangler.
# Inputs:
#   - wrangler_environment: Target environment (e.g. production, staging)
#   - secrets: Optional JSON object with key-value secrets to be injected
# =============================================================================

name: Cloudflare_Deploy

on:
  workflow_call:
    secrets:
      NPM_TOKEN:
        required: true
      CF_API_TOKEN:
        required: true
    inputs:
      deploy_environment:
        description: 'Choose an environment to deploy to'
        required: true
        type: string
      debug:
        description: 'Enable debug?'
        required: false
        default: false
        type: boolean
      runner:
        description: 'Choose the runner'
        required: false
        default: 'self-hosted'
        type: string
      job_container:
        description: 'Select the docker container for the action'
        required: false
        default: 'node:22.14'
        type: string
env:
  WRANGLER_SECRETS: ''

jobs:
  deploy:
    runs-on: ${{ inputs.runner }}
    name: Deploy
    environment: ${{ inputs.deploy_environment }}
    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    container:
      image: ${{ inputs.job_container }}
      volumes:
        - ${{ github.workspace }}:/workspace
    steps:
      - name: 🛫 Checkout
        uses: actions/checkout@v4

      - name: 🧙 Install Node
        uses: stetind/ppc-github-composite-actions/.github/actions/intall-global-dependencies@main
        with:
          npm_token: $NPM_TOKEN

      - name: 🔧 Building Environment
        run: npm run build --if-present

      - name: 🔧 Install jq
        shell: bash
        run: apt-get update && apt-get install -y -f jq

      - name: 🔧 Prepare wrangler environment variables
        shell: bash
        run: |
          declare -A obj
          echo '${{ toJSON(secrets) }}' > /workspace/.secrets_json
          echo '${{ toJSON(vars) }}' > /workspace/.vars_json
          
          while read -r key value; do
            obj[$key]=$value
          done <<< $(jq -r 'to_entries[] | "\(.key) \(.value)"' /workspace/.secrets_json)
          
          while read -r key value; do
            obj[$key]=$value
          done <<< $(jq -r 'to_entries[] | "\(.key) \(.value)"' /workspace/.vars_json)
          
          filename="wrangler.template.temp"
          
          for var_name in $(egrep -ohi '(\$(((ENV|VARS)_[A-Z_0-9]+)|(ACCOUNT_ID)))' ${filename} | cut -c 2-)
          do
            pattern='$'${var_name}
            replacement=${obj[${var_name}]}
          
            escaped_pattern=$(echo "$pattern" | sed 's/[][\\/\\.^$*+?(){}|]/\\&/g')
            escaped_replacement=$(echo "$replacement" | sed 's/[][\\/\\.^$*+?(){}|]/\\&/g')
            sed_pattern="s/${escaped_pattern}/${escaped_replacement}/g"
          
            sed -i "$sed_pattern" ${filename}
          done

      - name: 🔧 Create wrangler file
        run: cp wrangler.template.temp wrangler.toml

      - name: Prepare Secret Variables
        shell: bash
        run: |
          declare -A obj
          secret_variable_filename=/workspace/.secrets_variables
          touch $secret_variable_filename
          while read -r key value; do
            obj[$key]=$value
          done <<< $(jq -r 'to_entries[] | "\(.key) \(.value)"' /workspace/.secrets_json)

          filename="wrangler.toml"
          for var_name in $(egrep -ohi '(\$SECRET_([A-Z_0-9]+))' ${filename} | cut -c 2-)
          do
            key=${var_name#"SECRET_"}
            echo ${key} >> $secret_variable_filename
            echo "${key}=${obj[${key}]}" >> $GITHUB_ENV
          done

          if [[ -s $secret_variable_filename ]];
          then
            secret_variables=$(cat $secret_variable_filename)
            echo "WRANGLER_SECRETS<<EOF" >> $GITHUB_ENV
            echo "$secret_variables" >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV
          fi

      - name: 📦 Publish app
        uses: cloudflare/wrangler-action@v3.14.1
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          environment: ${{ vars.env_environment }}
          secrets: ${{ env.WRANGLER_SECRETS }}
